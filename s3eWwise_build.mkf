# mkf file for building extension s3eWwise.
# NOTE: This file was originally written by the extension builder, but will not
# be overwritten (unless --force is specified) and is intended to be modified.
display_name "Extensions/s3eWwise"

includepath Wwise/SDK/include
includepath source/h
includepath h

defines
{
    #Define the verbose channel to be off by default (but controllable by icf)
    IW_TRACE_CHANNEL_WWISE_VERBOSE=2

    #This macro indicates that this extension is being built
    S3E_EXT_WWISE
}

commands
{
	"for f in $(find Wwise/SDK/iOS/Debug-iphoneos/lib -type f); do cp $f ${f/.a/_d.a}; done"
	"mv Wwise/SDK/iOS/Debug-iphoneos/lib/*_d.a Wwise/SDK/iOS"
	"cp Wwise/SDK/iOS/Release-iphoneos/lib/*.a Wwise/SDK/iOS"
}

#This command re-generates the relevant source files from the s4e when
#the mkb is run
#extension
#{
#    ("$MARMALADE_ROOT/extensions/builder")
#    "make_extension s3eWwise.s4e"
#}

#include the extension builder subproject
subproject "$MARMALADE_ROOT/s3e/edk"

if {{defined I3D_OS_IPHONE}}
{
    files
    {
        ["source"]
        (use_first_found, source/iphone, source/generic)
        s3eWwise_platform.mm
    }
}

if {{defined I3D_OS_WINDOWS}}
{
    files
    {
        ["source"]
        (use_first_found, source/windows, source/generic)
        s3eWwise_platform.cpp
        #Add any windows-specific files here
    }
}

if {{defined S3E_ANDROID}}
{
    files
    {
        ["source"]
        (use_first_found, source/android, source/generic)
        s3eWwise_platform.cpp
        #Add any android-specific files here
    }
}

if {{defined I3D_OS_OSX}}
{
    files
    {
        ["source"]
        (use_first_found, source/osx, source/generic)
        s3eWwise_platform.mm
        #Add any osx-specific files here
    }
}

if {{defined I3D_OS_LINUX and not defined S3E_ANDROID}}
{
    files
    {
        ["source"]
        (use_first_found, source/linux, source/generic)
        s3eWwise_platform.cpp
        #Add any linux-specific files here
    }
}

files
{
	AkFilePackage.cpp
	AkFilePackageLUT.cpp
	s3eIOHook.cpp
    # Add any platform-independent files here
    # Note that if the file exists in the platform-specific directory
    # it will be taken from there instead of 'generic'
    s3eWwise_register.cpp
    s3eWwise.cpp

    ["h"]
    (source/h)
    s3eWwise_internal.h
    s3eWwise_autodefs.h

    ["docs"]
    (interface)
    s3eWwise.defines.txt

    []
    (.)
    s3eWwise.s4e
}
